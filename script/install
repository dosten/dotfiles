#!/usr/bin/env bash

set -e

cd "$(dirname "$0")/.."

DOT=$(pwd -P)

echo ''

info () {
  printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user () {
  printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then
    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
    then
      local currentSrc="$(readlink $dst)"

      if [ "$currentSrc" == "$src" ]
      then
        skip=true;
      else
        user "file already exists: $dst ($(basename "$src")), what do you want to do?\n\
         [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac
      fi
    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" == "true" ]
    then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [ "$backup" == "true" ]
    then
      mv "$dst" "${dst}.backup"
      success "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" == "true" ]
    then
      success "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]
  then
    ln -s "$1" "$2"
    success "linked $1 to $2"
  fi
}

install_zsh () {
  if test ! $(which zsh)
  then
    info 'installing zsh'

    sudo apt-get install zsh
  fi
}

install_ohmyzsh () {
  if [ ! -d "$HOME/.oh-my-zsh" ]
  then
    info 'installing oh-my-zsh'

    sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  fi
}

install_dotfiles () {
  info 'installing dotfiles'

  local overwrite_all=false backup_all=false skip_all=false

  for dotfile in $(find -H "$DOT" -maxdepth 2 -name '*.symlink' -not -path '*.git*')
  do
    dst="$HOME/.$(basename "${dotfile%.*}")"
    link_file "$dotfile" "$dst"
  done
}

install_theme () {
  info 'installing theme'

  rm -f $HOME/.oh-my-zsh/themes/pure.zsh-theme
  wget https://raw.githubusercontent.com/sindresorhus/pure/master/pure.zsh -O $HOME/.oh-my-zsh/custom/themes/pure.zsh-theme
  wget https://raw.githubusercontent.com/sindresorhus/pure/master/async.zsh -O $HOME/.oh-my-zsh/custom/async.zsh
}

set_default_shell () {
  if [ "$SHELL" != $(which zsh) ]
  then
    info 'setting up zsh as default shell'

    chsh -s $(which zsh)
  fi
}

install_zsh
install_ohmyzsh
install_dotfiles
install_theme
set_default_shell

# git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
# git clone git://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions

echo ''
echo '  All installed!'
